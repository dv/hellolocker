---
- name: Set vars
  set_fact:
    docker_image: "hellolocker:{{git_ref}}"
    docker_container: "hellolocker-{{git_ref}}-1"

- name: Install pip for docker-py
  sudo: yes
  easy_install:
    name: pip

- name: Install docker-py
  pip:
    name: docker-py

- name: Download repository
  git:
    accept_hostkey: yes
    clone: yes
    dest: /tmp/hellolocker
    repo: git://github.com/dv/hellolocker.git
    version: "{{git_ref}}"
    update: yes

- name: Build Docker image
  sudo: yes
  shell: "docker build -t '{{docker_image}}' ."
  args:
    chdir: /tmp/hellolocker

- name: Tag Docker image as latest
  sudo: yes
  shell: "docker tag -f '{{docker_image}}' 'hellolocker:latest'"

- name: Run migrations in container
  sudo: yes
  docker:
    name: "{{docker_container}}-migrations"
    image: "{{docker_image}}"
    docker_api_version: 1.18
    command: "bundle exec rake db:migrate"
    env:
      RAILS_ENV: "production"
      DATABASE_URL: "{{ database_url }}"
      SECRET_KEY_BASE: "{{ secret_key_base }}"

- name: "Remove migration container"
  sudo: yes
  docker:
    name: "{{docker_container}}-migrations"
    image: "{{docker_image}}"
    docker_api_version: 1.18
    state: absent

- name: Run Docker container
  sudo: yes
  docker:
    name: "{{docker_container}}"
    image: "{{docker_image}}"
    docker_api_version: 1.18
    ports: 80
    env:
      DATABASE_URL: "{{ database_url }}"
      SECRET_KEY_BASE: "{{ secret_key_base }}"
      MASTER_PASSWORD: "{{ master_password }}"

- name: Fetch containers older than last 5
  sudo: yes
  shell: "sudo docker ps -f 'name=hellolocker' -q | tail -n +6"
  register: old_containers

- name: Stop old containers
  sudo: yes
  shell: "docker stop {{ item }}"
  with_items: "{{old_containers.stdout_lines}}"

- name: Get exposed address
  sudo: yes
  shell: "docker port '{{docker_container}}' 80"
  register: port_result

- name: Save exposed address
  set_fact:
    hellolocker_address: "{{port_result.stdout}}"
